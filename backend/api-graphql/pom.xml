<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.diploma.panchev</groupId>
	<artifactId>api-graphql</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>api-graphql</name>
	<description>api-graphql</description>
	<properties>
		<java.version>17</java.version>
		<graphql-maven-plugin.version>2.3.1</graphql-maven-plugin.version>
		<logbook.version>3.3.0</logbook.version>
		<mapstruct.version>1.5.5.Final</mapstruct.version>
		<graphql-java-extended-scalars.version>20.2</graphql-java-extended-scalars.version>
		<protobuf.version>3.24.0</protobuf.version>
		<grpc.version>1.58.0</grpc.version>
		<reactor-salesforce.version>1.2.4</reactor-salesforce.version>
		<os-maven-plugin.version>1.4.1.Final</os-maven-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.zalando</groupId>
				<artifactId>logbook-bom</artifactId>
				<version>${logbook.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-bom</artifactId>
				<version>${protobuf.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-bom</artifactId>
				<version>${grpc.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-graphql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>logbook-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>logbook-httpclient5</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-protobuf</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-stub</artifactId>
		</dependency>
		<dependency>
			<groupId>com.salesforce.servicelibs</groupId>
			<artifactId>reactor-grpc</artifactId>
			<version>${reactor-salesforce.version}</version>
		</dependency>
		<dependency>
			<groupId>com.salesforce.servicelibs</groupId>
			<artifactId>reactor-grpc-stub</artifactId>
			<version>${reactor-salesforce.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>

		<dependency>
			<groupId>com.graphql-java-generator</groupId>
			<artifactId>graphql-java-server-runtime</artifactId>
			<version>${graphql-maven-plugin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-extended-scalars</artifactId>
			<version>${graphql-java-extended-scalars.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webflux</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.graphql</groupId>
			<artifactId>spring-graphql-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>${os-maven-plugin.version}</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-maven-plugin</artifactId>
				<version>${graphql-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>generateServerCode</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<addRelayConnections>true</addRelayConnections>
					<packageName>com.diploma.panchev.apigraphql</packageName>
					<schemaFileFolder>${project.basedir}/src/main/graphql</schemaFileFolder>
					<javaTypeForIDType>java.lang.String</javaTypeForIDType>
					<!-- The parameters below change the 1.x default behavior. They are set to respect the behavior of the future 2.x versions -->
					<copyRuntimeSources>false</copyRuntimeSources>
					<generateBatchLoaderEnvironment>true</generateBatchLoaderEnvironment>
					<separateUtilityClasses>true</separateUtilityClasses>
					<skipGenerationIfSchemaHasNotChanged>true</skipGenerationIfSchemaHasNotChanged>
					<customScalars>
						<customScalar>
							<graphQLTypeName>DateTime</graphQLTypeName>
							<javaType>java.time.OffsetDateTime</javaType>
							<graphQLScalarTypeStaticField>graphql.scalars.datetime.DateTimeScalar.INSTANCE</graphQLScalarTypeStaticField>
						</customScalar>
						<customScalar>
							<graphQLTypeName>Long</graphQLTypeName>
							<javaType>java.lang.Long</javaType>
							<graphQLScalarTypeStaticField>graphql.scalars.java.JavaPrimitives.GraphQLLong</graphQLScalarTypeStaticField>
						</customScalar>
					</customScalars>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.xolstice.maven.plugins</groupId>
				<artifactId>protobuf-maven-plugin</artifactId>
				<version>0.6.1</version>
				<configuration>
					<protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
				</configuration>
				<executions>
					<execution>
						<id>protoc-grpc</id>
						<goals>
							<goal>compile</goal>
							<goal>compile-custom</goal>
						</goals>
						<configuration>
							<pluginId>grpc-java</pluginId>
							<protoSourceRoot>${basedir}/src/main/grpc</protoSourceRoot>
							<protocPlugins>
								<protocPlugin>
									<id>reactor-grpc</id>
									<groupId>com.salesforce.servicelibs</groupId>
									<artifactId>reactor-grpc</artifactId>
									<version>${reactor-salesforce.version}</version>
									<mainClass>com.salesforce.reactorgrpc.ReactorGrpcGenerator</mainClass>
								</protocPlugin>
							</protocPlugins>
							<pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
						</configuration>
					</execution>
					<execution>
						<id>protoc-messaging</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<protoSourceRoot>${basedir}/src/main/messaging</protoSourceRoot>
							<outputDirectory>${project.build.directory}/generated-sources/messaging</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Workaround for grpc javax -> jakarta -->
			<plugin>
				<groupId>io.github.floverfelt</groupId>
				<artifactId>find-and-replace-maven-plugin</artifactId>
				<version>1.1.0</version>
				<executions>
					<execution>
						<id>exec</id>
						<phase>process-sources</phase>
						<goals>
							<goal>find-and-replace</goal>
						</goals>
						<configuration>
							<replacementType>file-contents</replacementType>
							<baseDir>target/generated-sources/protobuf/</baseDir>
							<findRegex>javax</findRegex>
							<replaceValue>jakarta</replaceValue>
							<recursive>true</recursive>
							<fileMask>.java</fileMask>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
